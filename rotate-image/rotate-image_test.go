package rotate_image

import (
	"reflect"
	"testing"
)

func TestRotateExample1(t *testing.T) {
	matrix := [][]int{{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}
	rotate(matrix)
	ans := matrix
	rightAns := [][]int{{7, 4, 1}, {8, 5, 2}, {9, 6, 3}}
	if !reflect.DeepEqual(ans, rightAns) {
		t.Error("right ans = ", rightAns, ", current ans = ", ans)
	}
}

func TestRotateExample2(t *testing.T) {
	matrix := [][]int{{5, 1, 9, 11}, {2, 4, 8, 10}, {13, 3, 6, 7}, {15, 14, 12, 16}}
	rotate(matrix)
	ans := matrix
	rightAns := [][]int{{15, 13, 2, 5}, {14, 3, 4, 1}, {12, 6, 8, 9}, {16, 7, 10, 11}}
	if !reflect.DeepEqual(ans, rightAns) {
		t.Error("right ans = ", rightAns, ", current ans = ", ans)
	}
}

func TestRotateExample3(t *testing.T) {
	matrix := [][]int{{1}}
	rotate(matrix)
	ans := matrix
	rightAns := [][]int{{1}}
	if !reflect.DeepEqual(ans, rightAns) {
		t.Error("right ans = ", rightAns, ", current ans = ", ans)
	}
}

func TestRotateExample4(t *testing.T) {
	matrix := [][]int{{1, 2}, {3, 4}}
	rotate(matrix)
	ans := matrix
	rightAns := [][]int{{3, 1}, {4, 2}}
	if !reflect.DeepEqual(ans, rightAns) {
		t.Error("right ans = ", rightAns, ", current ans = ", ans)
	}
}

func TestRotateTest0(t *testing.T) {
	matrix := [][]int{
		{201, 219, 221, 161, 16, 152, 209, 204, 194, 167, 75, 35, 69, 97, 23, 80},
		{159, 213, 129, 135, 97, 86, 102, 218, 244, 177, 36, 217, 72, 89, 24, 18},
		{53, 247, 180, 70, 144, 134, 20, 83, 46, 96, 119, 116, 194, 143, 197, 99},
		{102, 72, 235, 200, 159, 82, 163, 149, 4, 201, 111, 77, 35, 137, 96, 90},
		{129, 21, 161, 18, 156, 182, 102, 203, 24, 222, 65, 219, 110, 7, 63, 213},
		{80, 43, 158, 241, 127, 67, 135, 132, 13, 247, 211, 49, 129, 52, 140, 3},
		{75, 47, 22, 232, 230, 125, 181, -1, 92, 247, 220, 204, -1, 28, 162, 81},
		{73, 66, 67, 201, 134, 203, 78, 148, 195, 34, 198, 70, 88, 84, 74, 164},
		{132, 98, 141, 107, 224, 67, 108, 62, 59, 73, 11, 60, 102, 174, 142, 176},
		{241, 210, 122, 120, 158, 202, 13, 98, 237, 213, 169, 70, 42, 245, 235, 175},
		{88, 122, 27, 57, 190, 136, 120, 251, 210, 132, 56, 58, 52, 199, 235, 38},
		{154, 103, 160, 57, 50, 174, 156, 32, 132, 71, 104, 175, 61, 84, 95, 150},
		{207, 124, 208, 143, 5, 74, 139, 217, 207, 196, 20, 4, 140, 0, 44, 39},
		{104, 205, 97, 155, 124, 254, 189, 2, 70, 38, 178, 132, 123, 19, 27, 76},
		{144, 237, 220, 150, 56, 104, 112, 8, 45, 133, 14, 186, 135, 59, 226, 240},
		{9, 68, 141, 134, 67, 75, 137, 139, 114, 61, 16, 238, 81, 45, 59, 226}}
	rotate(matrix)
	ans := matrix
	rightAns := [][]int{
		{9, 144, 104, 207, 154, 88, 241, 132, 73, 75, 80, 129, 102, 53, 159, 201},
		{68, 237, 205, 124, 103, 122, 210, 98, 66, 47, 43, 21, 72, 247, 213, 219},
		{141, 220, 97, 208, 160, 27, 122, 141, 67, 22, 158, 161, 235, 180, 129, 221},
		{134, 150, 155, 143, 57, 57, 120, 107, 201, 232, 241, 18, 200, 70, 135, 161},
		{67, 56, 124, 5, 50, 190, 158, 224, 134, 230, 127, 156, 159, 144, 97, 16},
		{75, 104, 254, 74, 174, 136, 202, 67, 203, 125, 67, 182, 82, 134, 86, 152},
		{137, 112, 189, 139, 156, 120, 13, 108, 78, 181, 135, 102, 163, 20, 102, 209},
		{139, 8, 2, 217, 32, 251, 98, 62, 148, -1, 132, 203, 149, 83, 218, 204},
		{114, 45, 70, 207, 132, 210, 237, 59, 195, 92, 13, 24, 4, 46, 244, 194},
		{61, 133, 38, 196, 71, 132, 213, 73, 34, 247, 247, 222, 201, 96, 177, 167},
		{16, 14, 178, 20, 104, 56, 169, 11, 198, 220, 211, 65, 111, 119, 36, 75},
		{238, 186, 132, 4, 175, 58, 70, 60, 70, 204, 49, 219, 77, 116, 217, 35},
		{81, 135, 123, 140, 61, 52, 42, 102, 88, -1, 129, 110, 35, 194, 72, 69},
		{45, 59, 19, 0, 84, 199, 245, 174, 84, 28, 52, 7, 137, 143, 89, 97},
		{59, 226, 27, 44, 95, 235, 235, 142, 74, 162, 140, 63, 96, 197, 24, 23},
		{226, 240, 76, 39, 150, 38, 175, 176, 164, 81, 3, 213, 90, 99, 18, 80}}
	if !reflect.DeepEqual(ans, rightAns) {
		t.Error("right ans = ", rightAns, ", current ans = ", ans)
	}
}

func TestMatrixMulMyTest0(t *testing.T) {
	a := [][]float64{
		{1, 2},
		{3, 4},
		{5, 6},
	}
	b := [][]float64{
		{1, 2, 3},
		{3, 4, 1},
	}
	ans := matrixMul(a, b)
	rightAns := [][]float64{{7, 10, 5}, {15, 22, 13}, {23, 34, 21}}
	if !reflect.DeepEqual(ans, rightAns) {
		t.Error("right ans = ", rightAns, ", current ans = ", ans)
	}
}
